name: Comment on the pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Receive PR"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip pr.zip

      - name: Set env
        run: |
          echo "PR_NUMBER=$(cat ./pr/number)" >> "$GITHUB_ENV"
          echo "COMMIT_HASH=$(cat ./pr/commit)" >> "$GITHUB_ENV"
          
      - name: Publish artifacts as releases
        id: set-build-url
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { PR_NUMBER } = process.env;
            const tag = "pr" + PR_NUMBER;
            const fs = require('fs');
            const filePath = "./dist/build";
            const releases = (await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })).data.filter((r) => r.tag_name == tag);
            if (releases.length) {
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: releases[0].id,
              });
            }
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              draft: true,
            });
            const asset = await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: 'build',
              data: fs.createReadStream(filePath),
              headers: {
                'content-type': 'text/plain',
                'content-length': fs.statSync(filePath).size,
              },
            });
            return asset.data.browser_download_url;
          result-encoding: string

      - name: Comment with release url
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr_release
          number: ${{ env.PR_NUMBER }}
          message: |
            PR build: ${{ steps.set-build-url.outputs.result }} for ${{ env.COMMIT_HASH }}

